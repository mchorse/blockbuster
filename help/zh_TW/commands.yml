# Commands
blockbuster:
    commands:
        # General commands
        scene:
            |
            {l}{6}/{r}scene {8}<play|toggle|stop|loop>{r} {7}<名稱> [flag]{r}

            {r}開始，停止，或調整場景 {7}<名稱>{r}. 此外，還有 {7}loop{r} 可以讓您使用 {7}[flag]{r} 參數（{7}true{r} 或 {7}false{r}）更改循環的功能。

        # Record's commands
        record:
            help: "{r}{o}錄制命令{r}。該命令提供壹些次級命令用於處理玩家回放動作。"
            
            add: 
                |
                    {l}{6}/{r}record {8}add{r} {7}<文件名> <tick> <動作類型> [數據標簽]{r}
                    
                    {r}通過在時間點為 {7}<tick>{r} 時，向玩家回放 {7}<文件名>{r} 添加類別為 {7}<動作類型>{r} 的動作，並在 {7}[數據標簽]{r} 中指定其他附加的數據。
 
            calculate_body_yaw:
                |
                    {l}{6}/{r}record {8}calculate_body_yaw{r} {7}<文件名>{r}

                    {r}自動計算給定玩家回放的偏航值{r}。

            camera:
                |
                    {l}{6}/{r}record {8}camera{r} {7}<文件名> <相機配置> [x] [y] [z]{r}

                    {r}使用來自服務端的 {7}<相機配置>{r} 的數據，生成壹個新的（或更新現有的）名為 {7}<文件名>{r} 的玩家回放。也可以提供可選的偏移量 {7}[x]{7}、{7}[y]{7} 和 {7}[z]{7}，這些偏移量將通過給定的 XYZ 偏移量移動回放的位置。
           
            clean:
                |
                    {l}{6}/{r}record {8}clean{r} {7}<文件名> <屬性> [值] [起始] [結束]{r}
                    
                    {r}該命令會清除玩家回放 {7}<文件名>{r} 中，從 {7}[起始]{r} Tick 到 {7}[結束]{r}（不包含 {7}[結束]{r}）Tick，直到 [值] 參數中指定的值（允許使用絕對值），或到幀 [起始]，或第壹幀中，指定的 {7}<屬性>{r}。
            
            cut:
                |
                    {l}{6}/{r}record {8}cut{r} {7}<文件名> <前> <後>{r}

                    {r}該命令會刪除玩家回放 {7}<文件名>{r} 中，{7}<前>{r} 與 {7}<後>{r} 之間的動作（{7}<起始時間>{r} 和 {7}<結束時間>{r} 參數，是不包括前置和後置延遲的）。
            
            dupe:
                |
                    {l}{6}/{r}record {8}dupe{r} {7}<文件名> <新文件名>{r}
                    
                    {r}該命令會將玩家回放 {7}<文件名>{r} 復制壹份到名為 {7}<新文件名>{r} 的新玩家回放。

            erase:
                |
                    {l}{6}/{r}record {8}erase{r} {7}<文件名> <幀數> <起始時間>{r}

                    {r}該命令會刪除玩家回放 {7}<文件名>{r} 中從 {7}<起始時間>{r} Tick 起的 {7}<幀數>{r} 動作。

            fade:
                |
                    {l}{6}/{r}record {8}fade{r} {7}<文件名> <淡出>{r}

                    {r}該命令會使用線性插值，淡出玩家回放 {7}<文件名>{r} 中，時長為 {7}<淡出>{r} Tick 到第壹幀之間的動畫。
            
            fill:
                |
                    {l}{6}/{r}record {8}fill{r} {7}<文件名> <幀數> [tick]{r}

                    {r}該命令會在玩家回放 {7}<文件名>{r} 的第 {7}[tick]{r} 處插入 {7}<幀數>{f} 幀。若未給出 {7}[tick]{r} 參數，該命令會在玩家回放的最後延長 {7}[tick]{f}。

            flip:
                |
                    {l}{6}/{r}record {8}flip{r} {7}<文件名> <軸:X|Z> <坐標> [中心點]{r}

                    {r}該命令會將玩家回放 {7}<文件名>{r} 中的幀和動作，沿給定的 {7}<軸>{r} 和 {7}<坐標>{r} 翻轉。如果您要在方塊為偶數厚度的墻面實現鏡像效果，請將 {7}[中心點]{r} 設為 {7}false{r}（默認是 {7}true{r}）。
            
            get:
                |
                    {l}{6}/{r}record {8}get{r} {7}<文件名> <tick>{r}
                    
                    {r}輸出玩家回放 {7}<文件名>{r} 文件中，在 {7}<tick>{r} 處找到的動作數據。
            
            info:
                |
                    {l}{6}/{r}record {8}info{r} {7}<文件名>{r}
                    
                    {r}輸出關於文件名為 {7}<文件名>{r} 的玩家回放數據，例如已保存的錄制版本，錄制時長等。
            
            remove:
                |
                    {l}{6}/{r}record {8}remove{r} {7}<文件名> <tick> [index]{r}
                    
                    {r}刪除玩家回放 {7}<文件名>{r} 中，{7}<tick>{r} 上的的所有動作。如果您指定了 {7}[index]{r}，該命令只會移除在 {7}[index]{r} 處，{7}<tick>{r} 上的壹個動作。

            remove_body_yaw:
                |
                    {l}{6}/{r}record {8}remove_body_yaw{r} {7}<文件名>{r}

                    {r}從給定的玩家回放中移除身體偏航屬性。

            rename:
                |
                    {l}{6}/{r}record {8}rename{r} {7}<文件名> <新文件名>{r}

                    {r}該命令會將給定的名為 {7}<文件名>{r} 的玩家回放重新命名為 {7}<新文件名>{r}。如果回放存在先前版本，該命令也會對前幾個版本的回放 <文件名> 進行重命名。

            restore:
                |
                    {l}{6}/{r}record {8}restore{r} {7}<文件名> <叠代數>{r}

                    {r}將名為 {7}<文件名>{r} 的玩家回放文件恢復到最近的第 {7}<叠代數>{r} 版本。例如，{7}/record restore test 1{r} 會交換 {7}test.dat{r} 與 {7}test.dat~1{r} 玩家回放文件的位置。
            
            reverse:
                |
                    {l}{6}/{r}record {8}reverse{r} {7}<文件名>{r}

                    {r}倒轉名為 {7}<文件名>{r} 的玩家回放中的幀和動作。
        
            search:
                |
                    {l}{6}/{r}record {8}search{r} {7}<文件名> <動作類型> [限制] [輸出標簽]{r}
                    
                    {r}在玩家回放 {7}<文件名>{r} 中搜索動作給定的 {7}<動作類型>{r} 動作，可選擇用 {7}[限制]{r} 進行限制，然後輸出 Tick 時間，可選擇輸出哪些數據標簽。
                    
            origin:
                |
                    {l}{6}/{r}record {8}origin{r} {7}<文件名> [旋轉角度] [x] [y] [z]{r}
                    
                    {r}該命令會根據 {7}[x] [y] [z]{r}（如果三個都指定了）來改變玩家回放的原點（第壹幀），或者取玩家當前的位置。您也可以將玩家回放的內容相對於第壹幀在 Y 軸上進行旋轉。

            process:
                |
                    {l}{6}/{r}record {8}process{r} {7}<文件名> <屬性> <起始時間> <結束時間> <數學表達式>{r}

                    {r}該命令會處理玩家回放 {7}<文件名>{r} 從 {7}<起始時間>{r} Tick 到 {7}<結束時間>{r} 中給定的 {7}<屬性>{r}，並應用給定的 {7}<數學表達式>{r} 表達式。以下是可用的變量:

                    {7}initial{r} - 給定屬性的初始值
                    {7}value{r} - 給定屬性的當前值
                    {7}tick{r} - 當前在處理的幀的 Tick
                    {7}from{r} - {7}<起始時間>{r} 參數
                    {7}to{r} - {7}<結束時間>{r} 參數
                    {7}factor{r} - {7}起始時間{r} 和 {7}結束時間{r} 之間的表達式進行處理的距離是 (0..1)，它的公式基本上是 {7} (tick - from) / (to - from){r}

            prolong:
                |
                    {l}{6}/{r}record {8}prolong{r} {7}<文件名> [末尾延遲] [起始延遲]{r}
                    
                    {r}該命令可以調整給定的玩家回放 {7}<文件名>{r} 的前後延遲。
                                
            tp:
                |
                    {l}{6}/{r}record {8}tp{r} {7}<文件名> [tick]{r}
                    
                    {r}該命令會傳送玩家到名為玩家回放 {7}<文件名>{r} 的第壹幀或指定的第 {7}[tick]{r} 幀處。

        # Model's commands
        model:
            help: "{r}{o}模型命令{r}。該命令提供壹些次級命令用於管理自定義模型。"
            
            export:
                |
                    {l}{6}/{r}model {8}export{r} {7}<實體名稱>{r}
                    
                    {r}以 JSON 格式導出來自 {7}<實體名稱>{r} 生物渲染群的模型，該格式用於演員所使用的自定義模型。模型將會導出在 Blockbuster 的 config 文件夾的 export 文件夾。您可以選擇提供 {7}[實體標簽]{r} 來導出具有特定數據的實體生成模型。
                    
                    {r}{l}註意{r}: 這些自動生成的模型不完美，您需要在 McME 進壹步編輯獲得最佳效果。

            export_obj:
                |
                    {l}{6}/{r}model {8}export_obj{r} {7}<模型名稱> [姿勢]{r}
                    
                    {r}將名為 {7}<模型名稱>{r} 的 Blockbuster JSON 模型轉換為 OBJ 模型（包括默認材質，以及如果存在的 MTL 文件）。導出的 OBJ 模型可以在 Blockbuster 的配置文件夾中的 {l}export{r} 文件夾內找到。
                    
            clear:
                |
                    {l}{6}/{r}model {8}clear{r} {7}[路徑]{r}
                    
                    {r}清除加載的 Blockbuster 皮膚材質的材質緩存。如果指定了 {7}[路徑]{r}，該命令只會清理來自 {7}[路徑]{r} 的材質。

            clear_structures:
                |
                    {l}{6}/{r}model {8}clear_structures{r}

                    {r}清除結構偽裝緩存，並重新加載所有的結構。

            combine:
                |
                    {l}{6}/{r}model {8}combine{r} {7}<目標|導出路徑...>{r}

                    {r}將 {7}<目標路徑>{r} （即相對路徑 {7}config/blockbuster/models/{r}）中的所有皮膚合並為單個皮膚，並將合並結果導出至 {7}config/blockbuster/export/{r} （{7}<導出路徑>{r} 為可選參數）。

            convert:
                |
                    {l}{6}/{r}model {8}convert{r} {7}<steve|fred> <皮膚>{r}
                    
                    {r}轉換壹個名為 {7}<皮膚>{r}（文件名不包括文件的擴展名 {7}<steve|fred>{r} 模型）的 64x64（{7}fred{r}）皮膚到 64x32，或從 64x32（{7}steve{r}）轉換到 64x64 的皮膚。
            
            reload:
                |
                    {l}{6}/{r}model {8}reload{r} {7}[強制]{r}
                    
                    {r}強制客戶端和服務器使用可選的 {7}[強制]{r} 參數重載模型（服務器端僅 OP 用戶可用），若參數為 {7}true{r}，則會重載所有超過緩存的非修改文件時間戳的模型。
                    
            report:
                |
                    {l}{6}/{r}model {8}report{r}
                    
                    {r}該命令會創建壹個關於哪些模型和皮膚存在，以及哪些由 Minecraft 加載的報告，並將其復制到剪貼板。此命令僅用於協助目的。

        # Action's commands
        action:
            help: "{r}{o}動作命令{r}。本命令提供壹些次級命令管理玩家回放內容動作。"

            append:
                |
                    {l}{6}/{r}action {8}append{r} {7}<文件名> <偏移量> [場景]{r}

                    {r}將當前玩家的動作從給定的 {7}<文件名>{r} 玩家回放中的第 {7}<偏移量>{r} tick 處進行覆蓋錄制。妳也可以選擇指定 {7}[場景]{r} 名稱，會有助於您進行演員同步。

            clear:
                |
                    {l}{6}/{r}action {8}clear{r}
                    
                    {r}移除客戶端上所有的回放內容（用於強制卸載客戶端上的回放）。
            play: 
                |
                    {l}{6}/{r}action {8}play{r} {7}[無敵] [偽裝NBT標簽]{r}
                    
                    {r}播放玩家回放 {7}<文件名>{r} 及其的動作。 其中的次級命令還可接受可選的 {7}[無敵]{r}、{7}[偽裝NBT標簽]{r}（可用於指定偽裝）參數，以及標簽（標簽可以用 {7}1{r}，{7}0{r}，{7}true{r} 或 {7}false{r} 表示）。
            record: 
                |
                    {l}{6}/{r}action {8}record{r} {7}<文件名> [場景]{7}
                    
                    {r}將當前玩家的動作錄制到玩家回放 {7}<文件名>{r} 中。您也可以指定 {7}[場景]{r}。提供場景名稱，用於同步演員。
            request: 
                |
                    {l}{6}/{r}action {8}request{r} {7}<文件名>{r}
                    
                    {r}請求將名為 <文件名> 的動作從服務器加載到當前客戶端。
            stop: 
                |
                    {l}{6}/{r}action {8}stop{r}
                    
                    {r}停止錄制動作。若玩家沒有錄制任何動作，什麽都不會發生。
        
        on_head.help: "{r}{o}戴在頭上命令{r}。該命令可以將當前主手拿著的物品直接放入頭上的物品槽，無需受任何 NBT 標簽的困擾。"
        item_nbt.help:
            |
                {l}{6}/{r}item_nbt {7}<give 命令>{r}{r}

                {r}物品 NBT 命令用於將當前手持物品的 NBT 標簽復制到剪貼板。如果妳在 {7}<give 命令>{r} 提供了 {7}true{r} 或 {7}1{r} 參數，就會壹個合適的 {7}/give{r} 命令到剪貼板用於獲得這個物品。妳很可能需要壹個命令方塊來執行復制過來命令...

        damage.help:
            |
                {l}{6}/{r}damage {7}<實體> <數量>{r}

                {r}對 {7}<實體>{r} 造成 {7}<amount>{r} 的傷害。若 {7}<數量>{r} 為負數，則所有被目標選擇器匹配到的 {7}<實體>{r} 將會被治愈。

        spectate.help: 
            |
                {r}{o}觀察者命令{r}。該命令可以讓指定玩家附身至指定實體的視角上。
                
                {l}{6}/{r}spectate {8}<player>{r} {7}<entity>{r}

        modelblock:
            help: "{r}{o}模型方塊命令{r}。該命令可以讓妳通過命來令編輯模型方塊。"

            morph:
                |
                    {l}{6}/{r}modelblock {8}morph{r} {7}<x> <y> <z> [偽裝NBT標簽]{r}

                    {r}將位於 {7}<x>{r}, {7}<y>{r}, {7}<z>{r} 處的模型方塊中的偽裝替換為 {7}[偽裝NBT標簽]{r}。

            property:
                |
                    {l}{6}/{r}modelblock {8}property{r} {7}<x> <y> <z> <屬性:enabled> <值>{r}

                    {r}將位於 {7}<x>{r}, {7}<y>{r}, {7}<z>{r} 處的模型方塊的 {7}<屬性>{r} 屬性改為 {7}<值>{r}。