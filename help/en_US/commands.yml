# Commands
blockbuster:
    commands:
        # General commands (no SubCommandBase commands)
        director: 
            |
                {l}{6}/{r}director {8}<play|toggle|stop>{r} {7}<x> <y> <z>{r}
                
                {r}Start, stop or toggle playback of director block located at {7}<x>{r}, {7}<y>{r}, and {7}<z>{r} (you can use F3 to determine coordinates).

        # Record's commands
        record:
            help: "{r}{o}Record command{r}. This command provides few sub-commands for manipulating player recording actions."
            
            add: 
                |
                    {l}{6}/{r}record {8}add{r} {7}<filename> <tick> <action_type> [data_tag]{r}
                    
                    {r}Adds an action to player recording by {7}<filename>{r} at {7}<tick>{r} of type {7}<action_type>{r} with additional data specified in {7}[data_tag]{r}.
            
            get:
                |
                    {l}{6}/{r}record {8}get{r} {7}<filename> <tick>{r}
                    
                    {r}Outputs data tag of action found at {7}<tick>{r} in player recording by filename {7}<filename>{r}.
            
            info:
                |
                    {l}{6}/{r}record {8}info{r} {7}<filename>{r}
                    
                    {r}Outputs information about player recording by filename {7}<filename>{r}, such as saved version of record format, length of the record, etc.
            
            remove:
                |
                    {l}{6}/{r}record {8}remove{r} {7}<filename> <tick> [index]{r}
                    
                    {r}Removes all actions on {7}<tick>{r} in player recording by {7}<filename>{r}. If you'll specify {7}[index]{r}, command will remove only one action in {7}<tick>{r} at {7}[index]{r}.
            
            search:
                |
                    {l}{6}/{r}record {8}search{r} {7}<filename> <action_type> [limit] [output_tags]{r}
                    
                    {r}Searches for actions, optionally limited by {7}[limit]{r}, of given {7}<action_type>{r} and outputs the tick and, optionally output data tag, found in player recording by filename {7}<filename>{r}.

        # Model's commands
        model:
            help: "{r}{o}Model command{r}. This command provides sub-commands for managing custom models."
            
            export:
                |
                    {l}{6}/{r}model {8}export{r} {7}<entity_name> [entity_tag]{r}
                    
                    {r}Exports model from {7}<entity_name>{r} mob renderer in JSON format that actor use for custom models. This model will be exported into export folder of Blockbuster's config folder. Optionally you can provide {7}[entity_tag]{r} to generate a model from entity with specific data.
                    
                    {r}{l}Attention{r}: those models are automatically generated and aren't perfect. You'll need to adjust those models in McME to get best result.
            
            request: 
                |
                    {l}{6}/{r}model {8}request{r}
                    
                    {r}Requests models from the server (including host's models in LAN game).
            
            clear:
                |
                    {l}{6}/{r}model {8}clear{r}
                    
                    {r}Clears the texture cache from loaded skin textures.
                    
            replace_texture:
                |
                    {l}{6}/{r}model {8}replace_texture{r} {7}<target> [replace]{r}
                    
                    {r}Replaces a texture by ResourceLocation {7}<target>{r} to texture by ResourceLocation {7}[replace]{r}. If {7}[replace]{r} isn't specified, then original {7}<target>{r}'s original texture will be restored.

        # Action's commands
        action:
            help: "{r}{o}Action command{r}. This command provides few sub-commands for managing player recording actions."
            
            clear:
                |
                    {l}{6}/{r}action {8}clear{r}
                    
                    {r}Removes all records on the client (used to force unload client-side records).
            play: 
                |
                    {l}{6}/{r}action {8}play{r} {7}<filename> [name_tag] [model] [skin] [invincibility]{r}
                    
                    {r}Playbacks an action from given {7}<filename>{r}. This sub-command also can receive optional arguments {7}[name]{r} of the actor, his {7}[model]{r} and {7}[skin]{r} and {7}[invincibility]{r} flag ({7}1{r}, {7}0{r}, {7}true{r} or {7}false{r} values).
            record: 
                |
                    {l}{6}/{r}action {8}record{r} {7}<filename> [x] [y] [z]{7}
                    
                    {r}Records an action from current player into given {7}<filename>{r}. You can also optionally specify {7}[x]{f}, {7}[y]{f} and {7}[z]{f} coordinates of director block for which you want to record this recording. Supplying director block coordinates, helps out with synchronizing the actors.
            request: 
                |
                    {l}{6}/{r}action {8}request{r} {7}<filename>{r}
                    
                    {r}Requests an action, named {7}<filename>{r}, to be loaded from server to current client.
            stop: 
                |
                    {l}{6}/{r}action {8}stop{r}
                    
                    {r}Stops the recording of action. If the player didn't record anything, nothing will happen.