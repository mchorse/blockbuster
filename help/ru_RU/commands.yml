# Commands
blockbuster:
    commands:
        # General commands (no SubCommandBase commands)
        scene:
            |
            {l}{6}/{r}scene {8}<play|toggle|stop|loop>{r} {7}<name> [flag]{r}

            {r}Начать, остановить или проиграть воспроизведение сцены с названием {7}<name>{r}. Также, существует параметр закольцовывания {7}loop{r}, который позволяет закольцовывать сцену посредством указания {7}[flag]{r} аргументов ({7}true{r} или {7}false{r}).

        # Record's commands
        record:
            help: "{r}{o}Команда съёмки{r}. У этой команды есть под-команды для манипуляций с записями игрока."
            
            add: 
                |
                    {l}{6}/{r}record {8}add{r} {7}<filename> <tick> <action_type> [data_tag]{r}
                    
                    {r}Добавляет действие к записи игрока с именем {7}<filename>{r} в тике {7}<tick>{r} типа {7}<action_type>{r} с дополнительной информацией, указанной в {7}[data_tag]{r}.
            
            calculate_body_yaw:
                |
                    {l}{6}/{r}record {8}calculate_body_yaw{r} {7}<filename>{r}

                    {r}Автоматически просчитывает рыскание тела для заданной записи игрока{r}.

            clean:
                |
                    {l}{6}/{r}record {8}clean{r} {7}<filename> <property> [value] [from] [to]{r}
                    
                    {r}Эта команда сбрасывает свойство {7}<property>{r} в файле {7}<filename>{r} записи игрока от {7}[from]{r} тика к {7}[to]{r} (не включая {7}[to]{r}) тика в значении, указанном в аргументе {7}[value]{r} (принимает относительные значения) или значение кадра {7}[from]{r} или первого кадра.

            cut:
                |
                    {l}{6}/{r}record {8}cut{r} {7}<filename> <before> <after>{r}

                    {r}Эта команда удаляет все кадры из {7}<filename>{r} записи до {7}<before>{r} и после {7}<after>{r} (не нужно брать во внимание факторы продления если используются параметры {7}<before>{r} и {7}<after>{r}).

            dupe:
                |
                    {l}{6}/{r}record {8}dupe{r} {7}<filename> <new_filename>{r}
                    
                    {r}Эта команда дублирует выбранную запись игрока {7}<filename>{r} и переносит её другому игроку в новый файл {7}<new_filename>{r}.
            
            erase:
                |
                    {l}{6}/{r}record {8}erase{r} {7}<filename> <count> <from>{r}

                    {r}Эта команда удаляет количество {7}<count>{r} действий в записи игрока с названием {7}<filename>{r} начиная с тика {7}<from>{r}.

            fade:
                |
                    {l}{6}/{r}record {8}fade{r} {7}<filename> <fade_out>{r}

                    {r}Эта команда создаёт переход в записи игрока {7}<filename>{r} от первого кадра используя метод линейной интерполяции, которая создаёт переход между {7}<fade_out>{r} тиками.

            fill:
                |
                    {l}{6}/{r}record {8}fill{r} {7}<filename> <count> [tick]{r}

                    {r}Эта команда вставляет заданное количество {7}<count>{f} тиков {7}[tick]{f} в запись игрока с названием {7}<filename>{r}. Если значение тика {7}[tick]{r} задано не было, то будет использоваться значение длины заданной записи игрока.

            flip:
                |
                    {l}{6}/{r}record {8}flip{r} {7}<filename> <axis:X|Z> <coordinate> [center]{r}

                    {r}Эта команда разворачивает кадры и действия записи игрока с именем {7}<filename>{r} по заданной оси {7}<axis>{r} и координате {7}<coordinate{r}. Задайте параметр центра {7}[center]{r} как {7}false{r} (если вы отражаетесь даже через ряды толстых стен, по умолчанию значение параметра {7}true{r}) .

            get:
                |
                    {l}{6}/{r}record {8}get{r} {7}<filename> <tick>{r}
                    
                    {r}Выводит дополнительную информацию о действии в тике {7}<tick>{r} в текущем файле игрока {7}<filename>{r}.
            
            info:
                |
                    {l}{6}/{r}record {8}info{r} {7}<filename>{r}
                    
                    {r}Выводит информацию о записи посредством файла {7}<filename>{r}, к примеру формат, версия, длина записи и т.д. и т.п
            
            remove:
                |
                    {l}{6}/{r}record {8}remove{r} {7}<filename> <tick> [index]{r}
                    
                    {r}Убирает все действия в тике {7}<tick>{r} в записи игрока {7}<filename>{r}. Если вы укажете индекс {7}[index]{r}, то команда удалит только действие в тике {7}<tick>{r} с индексом {7}[index]{r}.
            
            remove_body_yaw:
                |
                    {l}{6}/{r}record {8}remove_body_yaw{r} {7}<filename>{r}

                    {r}Удаляет свойства рыскания тела у заданного воспроизведения игрока.

            restore:
                |
                    {l}{6}/{r}record {8}restore{r} {7}<filename> <iteration>{r}

                    {r}Восстанавливает предыдущую версию (итерацию) {7}<iteration>{r} записи игрока с названием {7}<filename>{r}. К примеру, {7}/record restore test 1{r} поменяет местами файлы записи {7}test.dat{r} и {7}test.dat~1{r} .

            reverse:
                |
                    {l}{6}/{r}record {8}reverse{r} {7}<filename>{r}

                    {r}Обращает вспять порядок кадров и действий записи игрока с именем {7}<filename>{r}.
                    
            search:
                |
                    {l}{6}/{r}record {8}search{r} {7}<filename> <action_type> [limit] [output_tags]{r}
                    
                    {r}Ищет действия; может быть ограничена лимитом {7}[limit]{r} заданного типа {7}<action_type>{r}; также может выводить тики и по желанию выводить дополнительную инофрмацию, которую можно найти в записи игрока {7}<filename>{r}.
                    
            origin:
                |
                    {l}{6}/{r}record {8}origin{r} {7}<filename> [rotation] [x] [y] [z]{r}
                    
                    {r}Эта команда заменяет местоположение начала (первый кадр) записи игрока на точку {7}[x] [y] [z]{r} (если все три аргумента указаны) или точку текущей позиции игрока. Вы также можете вращать запись игрока по оси Y в соответствии с первым кадром.
            
            process:
                |
                    {l}{6}/{r}record {8}process{r} {7}<filename> <property> <from> <to> <math>{r}

                    {r}Эта команда обрабатывает заданное свойство {7}<property>{r} в записи игрока с названием {7}<filename>{r} начиная с тика {7}<from>{r} и до тика {7}<to>{r}, и применяет заданное математическое выражение {7}<math>{r}. Доступны следующие переменные:

                    {7}initial{r} - начальное значение заданного свойства
                    {7}value{r} - текущее значение заданного свойства
                    {7}tick{r} - текущий тик обрабатываемого кадра
                    {7}from{r} - аргумент {7}<from>{r}
                    {7}to{r} - аргумент {7}<to>{r}
                    {7}factor{r} - насколько велик ступень обработки значения между тиками от {7}from{r} и до {7}to{r} в размере (0..1), в двух словах, применяемая формула здесь это {7}(tick - from) / (to - from){r}

            prolong:
                |
                    {l}{6}/{r}record {8}prolong{r} {7}<filename> [post_delay] [pre_delay]{r}
                    
                    {r}Эта команда позволяет задать задержку в начале и в конце записи игрока {7}<filename>{r}.
                                
            tp:
                |
                    {l}{6}/{r}record {8}tp{r} {7}<filename> [tick]{r}
                    
                    {r}Эта команда телепортирует игрока на первый кадр или, если указано, в определённый кадр в тике {7}[tick]{r} записи игрока {7}<filename>{r}.

        # Model's commands
        model:
            help: "{r}{o}Команда модели{r}. У этой команды есть подкоманды для организации пользовательских моделей."
            
            export:
                |
                    {l}{6}/{r}model {8}export{r} {7}<entity_name> [entity_tag]{r}
                    
                    {r}Экспортирует модель из сущности {7}<entity_name>{r} в формате JSON который используется для пользовательских моделей. Эта модель будет экспортирована в папку экспорта в папке конфигурации блокбастера. Также вы можете указать {7}[entity_tag]{r}, чтобы создать модель со специальнрй информацией.
                    
                    {r}{l}Внимание{r}: эти модели сгенерированны автоматически и далеки от идеала. Чтобы достичь лучшего результата, настройте модели в редакторе моделей.

            export_obj:
                |
                    {l}{6}/{r}model {8}export_obj{r} {7}<model_name> [pose]{r}
                    
                    {r}Конвертирует JSON модель Блокбастера с именем {7}<model_name>{r} в OBJ (также выводит текстуру по умолчанию, как и MTL файл, если он в наличии). Экспортированные OBJ модели находятся в папке в конфиге блокбастера' с именем {l}export{r} . 

            clear:
                |
                    {l}{6}/{r}model {8}clear{r} {7}[path]{r}
                    
                    {r}Очищает кэш текстур из загруженных скинов блокбастера. Если указан префикс пути {7}[path]{r} , то команда очистит только текстуры, начинающиеся с префикса пути {7}[path]{r}.
            
            convert:
                |
                    {l}{6}/{r}model {8}convert{r} {7}<steve|fred> <skin>{r}
                    
                    {r}Конвертирует скин {7}<skin>{r} (имя файла без наименования расширения файла (к примеру.png) модели {7}<steve|fred>{r}) 64x64 ({7}fred{r}) в 64x32, или 64x32 ({7}steve{r}) в скин 64x64.
            
            reload:
                |
                    {l}{6}/{r}model {8}reload{r} {7}[force]{r}
                    
                    {r}Принуждает сервер и клиент перезагрузить модели (для пользователей-операторов перезагружается только сервер) с дополнительным аргументом принуждения {7}[force]{r} который при условии {7}true{r} перезагрузит всё, кроме кэшированных немодифицированных моделей.
                    
            replace_texture:
                |
                    {l}{6}/{r}model {8}replace_texture{r} {7}<target> [replace]{r}
                    
                    {r}Заменяет текстуру из прежней директории {7}<target>{r} текстурой из новой директории {7}[replace]{r}. Если аргумент {7}[replace]{r} не указан, то оригинальная текстура {7}<target>{r} будет восстановлена.

        # Action's commands
        action:
            help: "{r}{o}Команда действия{r}. У этой команды есть подкоманды для манипуляций с записями игрока."
            
            clear:
                |
                    {l}{6}/{r}action {8}clear{r}
                    
                    {r}Убирает все записи в клиенте (используется для ручной выгрузки записей).
            play: 
                |
                    {l}{6}/{r}action {8}play{r} {7}<filename> [name_tag] [model] [skin] [invincibility]{r}
                    
                    {r}Воспроизводит действие из заданного файла {7}<filename>{r}. Эта подкоманда также имеет дополнительные аргументы имени {7}[name]{r} актёра, его модели {7}[model]{r}, скина {7}[skin]{r} и параметра неуязвимости {7}[invincibility]{r} - {7}1{r}, {7}0{r}, значения {7}true{r} или {7}false{r}.
            record: 
                |
                    {l}{6}/{r}action {8}record{r} {7}<filename> [x] [y] [z]{7}
                    
                    {r}Записывает действия текущего игрока в файл с именем {7}<filename>{r}. Также вы можете указать {7}[x]{f}, {7}[y]{f} и {7}[z]{f} - координаты блока режиссёра в который вы хотите сохранить запись. Указание координат помогает с синхронизацией актеров.
            request: 
                |
                    {l}{6}/{r}action {8}request{r} {7}<filename>{r}
                    
                    {r}Запрашивает действие с именем {7}<filename>{r} для загрузки с сервера на клиент.
            stop: 
                |
                    {l}{6}/{r}action {8}stop{r}
                    
                    {r}Останавливает запись действий. Если игрок ничего не записывал, то ничего и не случится.

        on_head.help: "{r}{o}Команда для помещения предметов на голову{r}. Эта команда позволяет надеть текущую вещь из главного слота прямо в слот головы без каких-либо заморочек с NBT тэгом."
        item_nbt.help:
            |
                {l}{6}/{r}item_nbt {7}<give_command>{r}{r}

                {r}Команда NBT предмета позволяет скопировать NBT-тэг удерживаемого в руке предмета в буффер обмена. Если вы укажете у свойства команды "give" {7}<give_command>{r} аргументы {7}true{r} или {7}1{r}, то в буффер обмена будет скопирована команда {7}/give{r}, для выдачи указанного предмета. Однако, для выполнения команды, вам, скорее всего, понадобится командный блок...
        spectate.help: 
            |
                {r}{o}Команда наблюдения{r}. Эта команда позволяет заставить выбранного игрока наблюдать за выбранным существом.

                {l}{6}/{r}spectate {8}<player>{r} {7}<entity>{r}
