# Commands
blockbuster:
    commands:
        # General commands (no SubCommandBase commands)
        scene: "{r}Начать, остановить или проиграть воспроизведение сцены с названием {7}<name>{r}. Также, существует параметр закольцовывания {7}loop{r}, который позволяет закольцовывать сцену посредством указания {7}[flag]{r} аргументов ({7}true{r} или {7}false{r})."

        # Record's commands
        record:
            help: "{r}{o}Команда съёмки{r}. У этой команды есть под-команды для манипуляций с записями игрока."

            add: "{r}Добавляет действие к записи игрока с именем {7}<filename>{r} в тике {7}<tick>{r} типа {7}<action_type>{r} с дополнительной информацией, указанной в {7}[data_tag]{r}."
            apply: "{r}Применяет список кадров исходника {7}<source>{r}со свойствами {7}<properties>{r} (можно отделить посредством {7},{r}) на цель {7}<target>{r} (запись игрока). Опционально также можно указать необходимо ли применять свойства кадров относительно {7}[relative]{r} (по умолчание применение абсолютно), а также вы можете указать отрезок от {7}[from]{r} до {7}[to]{r} тиков.\n\Дополнительно также можно вписать особые типы, такие как {7}head"
            calculate_body_yaw: "{r}Автоматически просчитывает рыскание тела для заданной записи игрока{r}."
            camera: "{r}Создаёт новую (или обновляет существующую) запись игрока с названием {7}<filename>{r} используя данные со стороны сервера {7}<camera_profile>{r}. Опционально можно также указать координаты {7}[x]{r}, {7}[y]{r} и {7}[z]{r} дабы сместить позицию по осям XYZ."
            clean: "{r}Эта команда сбрасывает свойство {7}<property>{r} в файле {7}<filename>{r} записи игрока от {7}[from]{r} тика к {7}[to]{r} (не включая {7}[to]{r}) тика в значении, указанном в аргументе {7}[value]{r} (принимает относительные значения) или значение кадра {7}[from]{r} или первого кадра."
            create: "{r}Эта команда создаёт запись игрока с названием {7}<filename>{r} с продолжительностью в {7}<duration>{r} кажров. Опционально, можно указать значения {7}[x]{r}, {7}[y]{r}, {7}[z]{r}, тангажа {7}[yaw]{r} и рыскания {7}[pitch]{r}, дабы переписать текущее положение и вращение отправителя (относительные значения по типу {7}~{r} также поддерживаются)."
            cut: "{r}Эта команда удаляет все кадры из {7}<filename>{r} записи до {7}<before>{r} и после {7}<after>{r} (не нужно брать во внимание факторы продления если используются параметры {7}<before>{r} и {7}<after>{r})."
            dupe: "{r}Эта команда дублирует выбранную запись игрока {7}<filename>{r} и переносит её другому игроку в новый файл {7}<new_filename>{r}."
            erase: "{r}Эта команда удаляет количество {7}<count>{r} действий в записи игрока с названием {7}<filename>{r} начиная с тика {7}<from>{r}."
            fade: "{r}Эта команда создаёт переход в записи игрока {7}<filename>{r} от первого кадра используя метод линейной интерполяции, которая создаёт переход между {7}<fade_out>{r} тиками."
            fill: "{r}Эта команда вставляет заданное количество {7}<count>{f} тиков {7}[tick]{f} в запись игрока с названием {7}<filename>{r}. Если значение тика {7}[tick]{r} задано не было, то будет использоваться значение длины заданной записи игрока."
            flip: "{r}Эта команда разворачивает кадры и действия записи игрока с именем {7}<filename>{r} по заданной оси {7}<axis>{r} и координате {7}<coordinate{r}. Задайте параметр центра {7}[center]{r} как {7}false{r} (если вы отражаетесь даже через ряды толстых стен, по умолчанию значение параметра {7}true{r}) ."
            get: "{r}Выводит дополнительную информацию о действии в тике {7}<tick>{r} в текущем файле игрока {7}<filename>{r}."
            info: "{r}Выводит информацию о записи посредством файла {7}<filename>{r}, к примеру формат, версия, длина записи и т.д. и т.п"
            origin: "{r}Эта команда заменяет местоположение начала (первый кадр) записи игрока на точку {7}[x] [y] [z]{r} (если все три аргумента указаны) или точку текущей позиции игрока. Вы также можете вращать запись игрока по оси Y в соответствии с первым кадром."
            process:
                |
                    {r}Эта команда обрабатывает заданное свойство {7}<property>{r} в записи игрока с названием {7}<filename>{r} начиная с тика {7}<from>{r} и до тика {7}<to>{r}, и применяет заданное математическое выражение {7}<math>{r}. Доступны следующие переменные:

                    {7}initial{r} - начальное значение заданного свойства
                    {7}value{r} - текущее значение заданного свойства
                    {7}tick{r} - текущий тик обрабатываемого кадра
                    {7}from{r} - аргумент {7}<from>{r}
                    {7}to{r} - аргумент {7}<to>{r}
                    {7}factor{r} - насколько велик ступень обработки значения между тиками от {7}from{r} и до {7}to{r} в размере (0..1), в двух словах, применяемая формула здесь это {7}(tick - from) / (to - from){r}

            prolong: "{r}Эта команда позволяет задать задержку в начале и в конце записи игрока {7}<filename>{r}."
            remove: "{r}Убирает все действия в тике {7}<tick>{r} в записи игрока {7}<filename>{r}. Если вы укажете индекс {7}[index]{r}, то команда удалит только действие в тике {7}<tick>{r} с индексом {7}[index]{r}."
            remove_modal: "Уверенны, что хотите удалить действия в заданном тике?"
            remove_all: "{r}Удаляет все действия в записи игрока с названием {7}<filename>{r}"
            remove_all_modal: "Уверенны, что хотите удалить все действия в записи \"%s\"?"
            delete: "{r}Удаляет файл записи с названием {7}<filename>{r}. Если вы укажете аргумент принудительного удаления {7}[force]{r} в качестве true, то процесс подтверждения будет пропущен."
            delete_modal: "Are you sure you want to delete the \"%s\" recording file?"
            remove_body_yaw: "{r}Удаляет свойства рыскания тела у заданного воспроизведения игрока."
            rename: "{r}Эта команда переназывает заданный файл записи игрока {7}<filename>{r} и даёт ему новое название {7}<new_filename>{r}. Также она переназывает предыдущие версии (итерации) файла записи {7}<filename>{r}, если таковые имеются."
            restore: "{r}Восстанавливает предыдущую версию (итерацию) {7}<iteration>{r} записи игрока с названием {7}<filename>{r}. К примеру, {7}/record restore test 1{r} поменяет местами файлы записи {7}test.dat{r} и {7}test.dat~1{r} ."
            reverse: "{r}Обращает вспять порядок кадров и действий записи игрока с именем {7}<filename>{r}."
            search: "{r}Ищет действия; может быть ограничена лимитом {7}[limit]{r} заданного типа {7}<action_type>{r}; также может выводить тики и по желанию выводить дополнительную инофрмацию, которую можно найти в записи игрока {7}<filename>{r}."
            tp: "{r}Эта команда телепортирует игрока на первый кадр или, если указано, в определённый кадр в тике {7}[tick]{r} записи игрока {7}<filename>{r}."

        # Model's commands
        model:
            help: "{r}{o}Команда модели{r}. У этой команды есть подкоманды для организации пользовательских моделей."

            clear: "{r}Очищает кэш текстур из загруженных скинов блокбастера. Если указан префикс пути {7}[path]{r} , то команда очистит только текстуры, начинающиеся с префикса пути {7}[path]{r}."
            clear_structures: "{r}Очищает кэш структурных морфов и перезагружает все структуры."
            combine: "{r}Комбинирует текстуры, расположенные по путям {7}<paths...>{r} (относительно {7}config/blockbuster/models/{r}), в единый скин и экспортирует их в папку {7}config/blockbuster/export/{r}."
            convert: "{r}Конвертирует скин {7}<skin>{r} (имя файла без наименования расширения файла (к примеру.png) модели {7}<steve|fred>{r}) 64x64 ({7}fred{r}) в 64x32, или 64x32 ({7}steve{r}) в скин 64x64."
            export:
                |
                    {r}Экспортирует модель из сущности {7}<entity_name>{r} в формате JSON который используется для пользовательских моделей. Эта модель будет экспортирована в папку экспорта в папке конфигурации блокбастера. Также вы можете указать {7}[entity_tag]{r}, чтобы создать модель со специальнрй информацией.

                    {r}{l}Внимание{r}: эти модели сгенерированны автоматически и далеки от идеала. Чтобы достичь лучшего результата, настройте модели в редакторе моделей.

            export_obj: "{r}Конвертирует JSON модель Блокбастера с именем {7}<model_name>{r} в OBJ (также выводит текстуру по умолчанию, как и MTL файл, если он в наличии). Экспортированные OBJ модели находятся в папке в конфиге блокбастера' с именем {l}export{r} ."
            reload: "{r}Принуждает сервер и клиент перезагрузить модели (для пользователей-операторов перезагружается только сервер) с дополнительным аргументом принуждения {7}[force]{r} который при условии {7}true{r} перезагрузит всё, кроме кэшированных немодифицированных моделей."
            report: "{r}Эта команда создаёт отчёт об используемых моделях и скинах, а также моделях и скинах, загруженных Майнкрафтом, и копирует его в буффер обмена. Эта команда необзодимо только для помощи в отладке и поиске багов."

        # Action's commands
        action:
            help: "{r}{o}Команда действия{r}. У этой команды есть подкоманды для манипуляций с записями игрока."

            append: "{r}Записывает текущие действия игрока в заданную запаись {7}<filename>{r} со смещением к тику {7}<offset>{r} и перезаписывает кадры после заданного тика. Вы также можете опционально указать название сцены {7}[scene]{r}. Указание имени в будущем поможет с синхронизацией актёров."
            cancel: "{r}Отменяет текущую действию записи."
            clear: "{r}Убирает все записи в клиенте (используется для ручной выгрузки записей)."
            play: "{r}Воспроизводит действие из заданного файла {7}<filename>{r}. Эта подкоманда также имеет дополнительные аргументы имени {7}[name]{r} актёра, его модели {7}[model]{r}, скина {7}[skin]{r} и параметра неуязвимости {7}[invincibility]{r} - {7}1{r}, {7}0{r}, значения {7}true{r} или {7}false{r}."
            record: "{r}Записывает действия текущего игрока в файл с именем {7}<filename>{r}. Также вы можете указать {7}[x]{f}, {7}[y]{f} и {7}[z]{f} - координаты блока режиссёра в который вы хотите сохранить запись. Указание координат помогает с синхронизацией актеров."
            request: "{r}Запрашивает действие с именем {7}<filename>{r} для загрузки с сервера на клиент."
            stop: "{r}Останавливает запись действий. Если игрок ничего не записывал, то ничего и не случится."

        on_head.help: "{r}{o}Команда для помещения предметов на голову{r}. Эта команда позволяет надеть текущую вещь из главного слота прямо в слот головы без каких-либо заморочек с NBT тэгом."
        item_nbt.help: "{r}Команда NBT предмета позволяет скопировать NBT-тэг удерживаемого в руке предмета в буффер обмена. Если вы укажете у свойства команды \"give\" {7}<give_command>{r} аргументы {7}true{r} или {7}1{r}, то в буффер обмена будет скопирована команда {7}/give{r}, для выдачи указанного предмета. Однако, для выполнения команды, вам, скорее всего, понадобится командный блок..."
        damage.help: "{r}Наносит урон в количестве {7}<amount>{r} заданному {7}<entity>{r}. Если параметр {7}<damage{r} является отрицательным, то все существа {7}<entity>{r}, отмеченные селектором цели восстановят здоровье."
        spectate.help: "{r}{o}Команда наблюдения{r}. Эта команда позволяет заставить выбранного игрока наблюдать за выбранным существом."
        mount.help: "{r}{o}Команда езды верхом{r}. Эта команнда позволяет дать заданной цели сущности {7}<target>{r} оседлать заданную сущность {7}[destination]{r}. Если аргумент {7}[destination]{r} опущен, то сущность {7}<target>{r} спешится.\n\nУдостоверьтесь, что существует только одна сущность, которая подходит для селектора цели {7}<target>{r} и селектора цели {7}[destination]{r}!"

        modelblock:
            help: "{r}{o}Команда блока-модели{r}. Эта команла позволяет редактировать блок-модель посредством команд."

            morph: "{r}Меняет морф на {7}[morph_nbt]{r} у блока-модели в точке координат {7}<x>{r}, {7}<y>{r}, {7}<z>{r}."
            property: "{r}Меняет свойство блока-модели {7}<property>{r} на {7}<value>{r} у блока-модели в точке координат {7}<x>{r}, {7}<y>{r}, {7}<z>{r}."
